#ifndef __IPCTOOLS_SHARED_LIST_H__
#define __IPCTOOLS_SHARED_LIST_H__

#include "allocator.h" 
#include "offset_ptr.h"

typedef struct ipt_shared_in_list_t ipt_shared_in_list_t;

typedef struct ipt_shared_in_list_node_t ipt_shared_in_list_node_t;

struct ipt_shared_in_list_node_t
{
	ipt_op_t prev;
	ipt_op_t next;
};

struct ipt_shared_in_list_t
{
	void (*add_tail)(ipt_shared_in_list_t *this, ipt_shared_in_list_node_t *n_ptr);

	void (*add_head)(ipt_shared_in_list_t *this, ipt_shared_in_list_node_t *n_ptr);

	int (*insert)(ipt_shared_in_list_t *this, ipt_shared_in_list_node_t  *n_ptr);

	void (*remove)(ipt_shared_in_list_t *this, ipt_shared_in_list_node_t *n_ptr);

	ipt_shared_in_list_node_t * (*head)(ipt_shared_in_list_t *this);

	ipt_shared_in_list_node_t * (*tail)(ipt_shared_in_list_t *this);

	ipt_shared_in_list_node_t * (*next)(ipt_shared_in_list_t *this, ipt_shared_in_list_node_t *n_ptr);
};

ipt_shared_in_list_t *ipt_shared_in_list_create(const char *name, ipt_allocator_t *alloc_ptr);

ipt_shared_in_list_t *ipt_shared_in_list_attach(const char *name, ipt_allocator_t *alloc_ptr);

int ipt_shared_in_list_destroy(ipt_shared_in_list_t *ptr);

ipt_shared_in_list_node_t * ipt_shared_in_list_find(ipt_shared_in_list_t *this, int (*)(ipt_shared_in_list_node_t *, void *), void *in_ptr);

void ipt_shared_in_list_for_each(ipt_shared_in_list_t *this, void (*)(const ipt_shared_in_list_node_t *const, void *), void *in_ptr);

#endif
