#ifndef __IPCTOOLS_REACTOR_H__
#define __IPCTOOLS_REACTOR_H__

#include "event_handler.h"

typedef struct ipt_reactor_t ipt_reactor_t;

struct ipt_reactor_t
{
	int (*run_event_loop)(ipt_reactor_t *this, struct timeval *tv);

	int (*register_handler)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr, ipt_event_handler_mask_t mask);

	int (*register_sig_handler)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr, int signum);

	int (*remove_handler)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr, ipt_event_handler_mask_t mask);

	int (*schedule_timer)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr, const ipt_time_value_t *one_shot, const ipt_time_value_t *interval, const void * act);

	int (*remove_timer)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr);

	int (*notify)(ipt_reactor_t *this, ipt_event_handler_t *eh_ptr, ipt_event_handler_mask_t mask,ipt_time_value_t *tv);

	void (*destroy)(ipt_reactor_t *this);

};


ipt_reactor_t * ipt_reactor_create(void);

#endif
